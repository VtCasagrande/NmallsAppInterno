worker_processes 1;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    sendfile        on;
    keepalive_timeout  65;
    client_max_body_size 100M;
    
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;
    
    server {
        listen 80;
        server_name _;

        location / {
            root /app/frontend/build;
            index index.html;
            try_files $uri $uri/ /index.html;

            # Adiciona suporte a SPA - todas as rotas não encontradas são redirecionadas para o index.html
            error_page 404 =200 /index.html;
        }

        # Configuração para servir o backend API
        location /api {
            proxy_pass http://localhost:5000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        # Configuração para servir arquivos estáticos
        location ~* \.(js|css|png|jpg|jpeg|gif|svg|ico|woff|woff2|ttf|eot)$ {
            root /app/frontend/build;
            expires 30d;
            add_header Cache-Control "public, max-age=2592000";
            access_log off;
        }

        # Configuração para bloquear acesso a arquivos sensíveis
        location ~ /\.(?!well-known) {
            deny all;
        }
    }
} 